/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvRouter,
  GlvRouterInterface,
} from "../../../contracts/router/GlvRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Router",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract IGlvHandler",
        name: "_glvHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyHoldingAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyTokenTranferGasLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "cancelGlvDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "glv",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialLongToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialShortToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "longTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "shortTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "minGlvTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GlvDepositUtils.CreateGlvDepositParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createGlvDeposit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glvHandler",
    outputs: [
      {
        internalType: "contract IGlvHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendNativeToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendWnt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162001a9738038062001a9783398101604081905262000035916200007d565b60016000556001600160a01b0393841660805293831660a05290821660c052811660e0521661010052620000fd565b6001600160a01b03811681146200007a57600080fd5b50565b600080600080600060a086880312156200009657600080fd5b8551620000a38162000064565b6020870151909550620000b68162000064565b6040870151909450620000c98162000064565b6060870151909350620000dc8162000064565b6080870151909250620000ef8162000064565b809150509295509295909350565b60805160a05160c05160e05161010051611925620001726000396000818161024e015281816103c4015261070b015260006101d4015260008181609c0152818161018d0152818161036d0152818161046601526105e401526000818161028201526107c50152600061010f01526119256000f3fe6080604052600436106100905760003560e01c80634a4a7b04146100fd57806353ead2d3146101475780635ae149a91461015a578063660d0d671461017b5780637d39aaf1146101af5780639ff78c30146101c2578063ac9650d8146101f6578063d95c9e2914610216578063e6d66ac814610229578063f1722c481461023c578063f887ea401461027057600080fd5b366100f85760006100c07f00000000000000000000000000000000000000000000000000000000000000006102a4565b9050336001600160a01b038216146100f6573360405163738d28df60e11b81526004016100ed9190610f61565b60405180910390fd5b005b600080fd5b34801561010957600080fd5b506101317f000000000000000000000000000000000000000000000000000000000000000081565b60405161013e9190610f61565b60405180910390f35b6100f6610155366004610f95565b610357565b61016d610168366004610fc1565b6103a1565b60405190815260200161013e565b34801561018757600080fd5b506101317f000000000000000000000000000000000000000000000000000000000000000081565b6100f66101bd366004610f95565b610450565b3480156101ce57600080fd5b506101317f000000000000000000000000000000000000000000000000000000000000000081565b610209610204366004611003565b61048c565b60405161013e91906110c7565b6100f6610224366004611129565b6105aa565b6100f6610237366004611142565b61077d565b34801561024857600080fd5b506101317f000000000000000000000000000000000000000000000000000000000000000081565b34801561027c57600080fd5b506101317f000000000000000000000000000000000000000000000000000000000000000081565b6000816001600160a01b03166321f8a7216040516020016102dc9060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161031091815260200190565b602060405180830381865afa15801561032d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610351919061118e565b92915050565b61035f610833565b6103688261088c565b6103937f000000000000000000000000000000000000000000000000000000000000000083836108b3565b61039d6001600055565b5050565b60006103ab610833565b6040516391ba53b760e01b815233906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906391ba53b7906103fb908490879060040161125c565b6020604051808303816000875af115801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e91906113c3565b91505061044b6001600055565b919050565b610458610833565b6104618261088c565b6103937f000000000000000000000000000000000000000000000000000000000000000083836109bf565b6060816001600160401b038111156104a6576104a66113dc565b6040519080825280602002602001820160405280156104d957816020015b60608152602001906001900390816104c45790505b50905060005b828110156105a357600080308686858181106104fd576104fd6113f2565b905060200281019061050f9190611408565b60405161051d92919061144e565b600060405180830381855af49150503d8060008114610558576040519150601f19603f3d011682016040523d82523d6000602084013e61055d565b606091505b5091509150816105705761057081610a48565b80848481518110610583576105836113f2565b60200260200101819052505050808061059b9061145e565b9150506104df565b5092915050565b6105b2610833565b60405163fdfc26f360e01b815260009073__$7269bf5863f4c2dcc02a73c1e34d049bdc$";

type GlvRouterConstructorParams =
  | [linkLibraryAddresses: GlvRouterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GlvRouter__factory extends ContractFactory {
  constructor(...args: GlvRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GlvRouter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: GlvRouterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7269bf5863f4c2dcc02a73c1e34d049bdc\\$__", "g"),
      linkLibraryAddresses[
        "contracts/glv/GlvDepositStoreUtils.sol:GlvDepositStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _glvHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvRouter> {
    return super.deploy(
      _router,
      _roleStore,
      _dataStore,
      _eventEmitter,
      _glvHandler,
      overrides || {}
    ) as Promise<GlvRouter>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _glvHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _roleStore,
      _dataStore,
      _eventEmitter,
      _glvHandler,
      overrides || {}
    );
  }
  override attach(address: string): GlvRouter {
    return super.attach(address) as GlvRouter;
  }
  override connect(signer: Signer): GlvRouter__factory {
    return super.connect(signer) as GlvRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvRouterInterface {
    return new utils.Interface(_abi) as GlvRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvRouter {
    return new Contract(address, _abi, signerOrProvider) as GlvRouter;
  }
}

export interface GlvRouterLibraryAddresses {
  ["contracts/glv/GlvDepositStoreUtils.sol:GlvDepositStoreUtils"]: string;
}
