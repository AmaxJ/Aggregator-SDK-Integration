/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Reader, ReaderInterface } from "../../../contracts/reader/Reader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "positionKeys",
        type: "bytes32[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
    ],
    name: "getAccountPositionInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtBlock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtBlock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "priceImpactDiffUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderUtils.PositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
    ],
    name: "getAdlState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Deposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Deposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Deposit.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "longTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "enum ISwapPricingUtils.SwapPricingType",
        name: "swapPricingType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "includeVirtualInventoryImpact",
        type: "bool",
      },
    ],
    name: "getDepositAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInTokens",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "sizeDeltaUsd",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "getExecutionPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "priceImpactUsd",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "priceImpactDiffUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getMarketBySalt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
    ],
    name: "getMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPricesList",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarketInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "longTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "shortTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "pnlFactorType",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getMarketTokenPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "poolValue",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "longPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shortPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "netPnl",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "longTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrowingFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFeePoolFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "impactPoolAmount",
            type: "uint256",
          },
        ],
        internalType: "struct MarketPoolValueInfo.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getNetPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getOpenInterestWithPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPnlToPoolFactor",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "usePositionSizeAsSizeDeltaUsd",
        type: "bool",
      },
    ],
    name: "getPositionInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtBlock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtBlock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "priceImpactDiffUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderUtils.PositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "getPositionPnlUsd",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getShift",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
        ],
        internalType: "struct Shift.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
    ],
    name: "getSwapAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "feeReceiverAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmountForPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountAfterFees",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "uiFeeReceiverFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uiFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct SwapPricingUtils.SwapFees",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenInPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenOutPrice",
        type: "tuple",
      },
    ],
    name: "getSwapPriceImpact",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "marketTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "enum ISwapPricingUtils.SwapPricingType",
        name: "swapPricingType",
        type: "uint8",
      },
    ],
    name: "getWithdrawalAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
    ],
    name: "isPositionLiquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "remainingCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsdForLeverage",
            type: "int256",
          },
        ],
        internalType: "struct PositionUtils.IsPositionLiquidatableInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061575a80620000216000396000f3fe608060405234801561001057600080fd5b50600436106101485760003560e01c8062e261b71461014d5780630815bce114610178578063095ce6c5146101985780630fa8f516146102415780631485d2971461026157806324c029e0146102815780632572d8f9146102a25780632b17b4fd146102ca578063409f37c7146102fd57806342a6f8d31461036f57806349651b6a1461038f5780635d2b44f9146103af5780635d5c6efe146103cf5780635deceb84146103f1578063714af34b1461040457806377cfb16214610424578063847bb46914610444578063971de27d14610464578063a014093814610477578063a4f0d5501461048a578063addac2e01461049d578063b4976dae1461053c578063bc7b5bba1461054f578063ce3264bf1461056f578063ceeea3bf1461058f578063ece9e0c8146105af578063fd50649d146105cf575b600080fd5b61016061015b366004612ef8565b6105e2565b60405161016f93929190612f95565b60405180910390f35b61018b610186366004612fef565b610724565b60405161016f919061331c565b6101ab6101a636600461332b565b6107bd565b60405161016f92919060006101808201905083825282516020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e083015161010081818501528085015191505061012081818501528085015191505061014081818501528085015161016085015250509392505050565b61025461024f3660046133a8565b6108b1565b60405161016f91906133d4565b61027461026f3660046133a8565b61093d565b60405161016f9190613427565b61029461028f366004613567565b6109c3565b60405190815260200161016f565b6102b56102b03660046135e5565b6109de565b6040805192835260208301919091520161016f565b6102dd6102d8366004613652565b610a71565b60408051948552921515602085015291830152606082015260800161016f565b61031061030b3660046136ae565b610b0c565b604080519384526020808501939093528151848201529181015160608085019190915291810151608080850191909152918101516001600160a01b031660a0808501919091529181015160c0840152015160e08201526101000161016f565b61038261037d36600461371b565b610be6565b60405161016f9190613928565b6103a261039d3660046133a8565b610d33565b60405161016f919061398a565b6103c26103bd36600461399d565b610db9565b60405161016f9190613a08565b6103e26103dd366004613a16565b610ed2565b60405161016f93929190613aa0565b6102946103ff366004613ab6565b610fed565b610417610412366004613b50565b611076565b60405161016f9190613bbc565b61043761043236600461371b565b6110f8565b60405161016f9190613bca565b610457610452366004613c19565b611237565b60405161016f9190613d36565b610294610472366004613d45565b6112c6565b610294610485366004613567565b61135d565b6104176104983660046133a8565b61136c565b6104b06104ab3660046133a8565b6113ad565b60408051825180516001600160a01b0390811683526020808301518216818501528285015182168486015260608084015183168186015260808085015184168187015260a0948501519093169385019390935294850151805160c08501529485015160e0840152928401516101008301528301516101208201529101516101408201526101600161016f565b6103e261054a366004613daa565b611430565b61056261055d366004613e9e565b611546565b60405161016f9190613efd565b61058261057d366004613f40565b611633565b60405161016f9190613f75565b6105a261059d3660046133a8565b611780565b60405161016f9190613fb7565b6105c26105bd366004614058565b611806565b60405161016f9190614148565b6102946105dd36600461418b565b6118e4565b6000606061060a60405180606001604052806000815260200160008152602001600081525090565b60405163fdfc26f360e01b815260009073__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f390610646908d908c906004016141e6565b6101e060405180830381865af4158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190614373565b604051633e2d58cd60e21b815290915073__$91a1a7f12f728c8759f4be979bae55555f$__9063f8b56334906106cc908d908d9086908d908d908d906004016143c0565b600060405180830381865af41580156106e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107119190810190614450565b9350935093505096509650969350505050565b61072c6126d6565b6040516306bc109960e31b815273__$7d62b333171909e88f9935bee8a07b01ad$__906335e084c89061076f908b908b908b908b908b908b908b90600401614509565b6106a060405180830381865af415801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b191906146f0565b98975050505050505050565b600061081c60405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051637d494dc360e01b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__90637d494dc39061085f908c908c908c908c908c908c908c9060040161483e565b61018060405180830381865af415801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a191906148a0565b9150915097509795505050505050565b6108b961271e565b60405163fdfc26f360e01b815273__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f3906108f290869086906004016141e6565b6101e060405180830381865af4158015610910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190614373565b90505b92915050565b6109456127c2565b60405163fdfc26f360e01b815273__$b63e253a228f0e32f671cc49c7fc32477c$__9063fdfc26f39061097e90869086906004016141e6565b600060405180830381865af415801561099b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109349190810190614a1a565b60006109d286868686866118f2565b90505b95945050505050565b60008073__$cede619ada704cb31824310f43bfb6e2d5$__63b027d32d8989898989896040518763ffffffff1660e01b8152600401610a2296959493929190614b79565b6040805180830381865af4158015610a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a629190614bd1565b91509150965096945050505050565b6000806000806000610a84898989611983565b90506000610a928a8a6119fd565b90506000806000610af58d858c8e604051602001610ada9060208082526016908201527513505617d4139317d19050d513d497d193d497d0511360521b604082015260600190565b60405160208183030381529060405280519060200120611a8e565b969f919e509c50949a509398505050505050505050565b600080610b516040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b60405163dafa66bf60e01b815273__$ae023ddda47a46a9af6ec057a2ebe54454$__9063dafa66bf90610b92908c908c908c908c908c908c90600401614bf5565b61010060405180830381865af4158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd49190614c47565b92509250925096509650969350505050565b60606000610bf686868686611ae2565b9050600081516001600160401b03811115610c1357610c13612c4c565b604051908082528060200260200182016040528015610c4c57816020015b610c3961285b565b815260200190600190039081610c315790505b50905060005b8251811015610d28576000838281518110610c6f57610c6f614ccf565b6020026020010151905073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__63fdfc26f38a836040518363ffffffff1660e01b8152600401610cb29291906141e6565b600060405180830381865af4158015610ccf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cf79190810190614dfb565b838381518110610d0957610d09614ccf565b6020026020010181905250508080610d2090614f47565b915050610c52565b509695505050505050565b610d3b61285b565b60405163fdfc26f360e01b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390610d7490869086906004016141e6565b600060405180830381865af4158015610d91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109349190810190614dfb565b610dc16128dc565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610dfd908c908c90600401614f60565b608060405180830381865af4158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e9190614fd7565b604051630a37d4c760e11b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__9063146fa98e90610e84908c9085908c908c908c908c908c90600401614ff3565b606060405180830381865af4158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec59190615047565b9998505050505050505050565b60008060008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58c8c6040518363ffffffff1660e01b8152600401610f11929190614f60565b608060405180830381865af4158015610f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f529190614fd7565b6040516340f5d44f60e11b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__906381eba89e90610f98908e9085908e908e908e908e908e90600401615063565b606060405180830381865af4158015610fb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd991906150b5565b935093509350509750975097945050505050565b604051632bf0549960e11b815260009073__$12e61648fa0188a8261c5e0807220aaa66$__906357e0a93290611035908c908c908c908c908c908c908c908c906004016150e3565b602060405180830381865af4158015611052573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec5919061514e565b61107e6128fd565b60405163a8d8fff560e01b815273__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff5906110b79086908690600401614f60565b608060405180830381865af41580156110d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190614fd7565b6060600061110886868686611b61565b9050600081516001600160401b0381111561112557611125612c4c565b60405190808252806020026020018201604052801561115e57816020015b61114b61271e565b8152602001906001900390816111435790505b50905060005b8251811015610d2857600083828151811061118157611181614ccf565b6020026020010151905073__$3d31b232fb363902662fbc281b11ab3357$__63fdfc26f38a836040518363ffffffff1660e01b81526004016111c49291906141e6565b6101e060405180830381865af41580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112069190614373565b83838151811061121857611218614ccf565b602002602001018190525050808061122f90614f47565b915050611164565b61123f612924565b60405163619c4ddb60e01b815273__$7d62b333171909e88f9935bee8a07b01ad$__9063619c4ddb9061127a90879087908790600401615167565b6103a060405180830381865af4158015611298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bc9190615242565b90505b9392505050565b60008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff588886040518363ffffffff1660e01b8152600401611302929190614f60565b608060405180830381865af415801561131f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113439190614fd7565b90506113528782878787611b7b565b979650505050505050565b60006109d28686868686611bbf565b6113746128fd565b6040516329bc01e160e11b815273__$ff439aa65a80c9eec648f15db20b189505$__9063537803c2906110b790869086906004016141e6565b6113b5612995565b60405163fdfc26f360e01b815273__$17bbc74b36df540d4a9b171eb59c5012db$__9063fdfc26f3906113ee90869086906004016141e6565b61016060405180830381865af415801561140c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190615351565b60008060008073__$3d31b232fb363902662fbc281b11ab3357$__63fdfc26f38a886040518363ffffffff1660e01b815260040161146f9291906141e6565b6101e060405180830381865af415801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b19190614373565b60405163e22de79360e01b815290915073__$91a1a7f12f728c8759f4be979bae55555f$__9063e22de793906114f3908c908c908c9087908c9060040161540e565b606060405180830381865af4158015611510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153491906150b5565b93509350935050955095509592505050565b60606000611555868585611bea565b9050600081516001600160401b0381111561157257611572612c4c565b6040519080825280602002602001820160405280156115ab57816020015b611598612924565b8152602001906001900390816115905790505b50905060005b8251811015610d285760008782815181106115ce576115ce614ccf565b6020026020010151905060008483815181106115ec576115ec614ccf565b602002602001015190506116018a8383611237565b84848151811061161357611613614ccf565b60200260200101819052505050808061162b90614f47565b9150506115b1565b60606000611642858585611bea565b9050600081516001600160401b0381111561165f5761165f612c4c565b60405190808252806020026020018201604052801561169857816020015b6116856128fd565b81526020019060019003908161167d5790505b50905060005b82518110156117765760008382815181106116bb576116bb614ccf565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58a846040518363ffffffff1660e01b8152600401611700929190614f60565b608060405180830381865af415801561171d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117419190614fd7565b90508084848151811061175657611756614ccf565b60200260200101819052505050808061176e90614f47565b91505061169e565b5095945050505050565b611788612a06565b60405163fdfc26f360e01b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__9063fdfc26f3906117c190869086906004016141e6565b600060405180830381865af41580156117de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109349190810190615458565b6060600084516001600160401b0381111561182357611823612c4c565b60405190808252806020026020018201604052801561185c57816020015b6118496126d6565b8152602001906001900390816118415790505b50905060005b8551811015610d2857600086828151811061187f5761187f614ccf565b602002602001015190506118b38989838986815181106118a1576118a1614ccf565b602002602001015160008a6001610724565b8383815181106118c5576118c5614ccf565b60200260200101819052505080806118dc90614f47565b915050611862565b60006109d585858585611ca5565b600080611908611903888887611cd4565b611d27565b90506000611917888887611d9a565b9050811580611924575080155b15611934576000925050506109d5565b6000611941878787611de1565b905060006119526119038385615581565b905060008761196a576119658286615598565b611974565b6119748583615598565b9b9a5050505050505050505050565b6000836001600160a01b031663bd02d0f561199e8585611e1a565b6040518263ffffffff1660e01b81526004016119bc91815260200190565b602060405180830381865afa1580156119d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bc919061514e565b611a056128fd565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590611a419087908790600401614f60565b608060405180830381865af4158015611a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a829190614fd7565b90506109348482611ea1565b600080600080611aa2898989896001611b7b565b90506000611ab68a878b600001518a611f7a565b905060008083138015611ad0575081611ace84611ff5565b115b9b929a50909850909650505050505050565b6060846001600160a01b031663f069052a611afc86612047565b85856040518463ffffffff1660e01b8152600401611b1c93929190613aa0565b600060405180830381865afa158015611b39573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109d591908101906155bf565b6060846001600160a01b031663f069052a611afc866120c9565b600080611b8c878787878715612104565b905080600003611ba05760009150506109d5565b6000611bb38888886000015188886118f2565b90506107b1818361217d565b600080611bcd878786611cd4565b90506000611bde88888888886118f2565b90506107b182826121c4565b6060836001600160a01b031663e7e4148e604051602001611c2a906020808252600b908201526a13505492d15517d31254d560aa1b604082015260600190565b6040516020818303038152906040528051906020012085856040518463ffffffff1660e01b8152600401611c6093929190613aa0565b600060405180830381865afa158015611c7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112bc9190810190615644565b600080611cb68686866001876118f2565b90506000611cc88787876000886118f2565b90506113528183615678565b600080611ce9846040015185606001516121da565b90506000611d0286866000015187604001518786612209565b90506000611d1b87876000015188606001518887612209565b905061135281836156a0565b60006001600160ff1b03821115611d965760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084015b60405180910390fd5b5090565b600080611daf846040015185606001516121da565b90506000611dc88686600001518760400151878661228f565b90506000611d1b8787600001518860600151888761228f565b60008215611e025781611df5578351611dfb565b83602001515b90506112bf565b81611e115783602001516112bc565b50509051919050565b6000604051602001611e4d906020808252600d908201526c1310551154d517d0511317d055609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0385169082015282151560608201526080015b60405160208183030381529060405280519060200120905092915050565b80516001600160a01b0316611ec9576040516302fde0d760e11b815260040160405180910390fd5b6000826001600160a01b0316637ae1cfca611ee784600001516122ac565b6040518263ffffffff1660e01b8152600401611f0591815260200190565b602060405180830381865afa158015611f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4691906156b3565b90508015611f755781516040516309f8c93760e01b81526001600160a01b039091166004820152602401611d8d565b505050565b6000846001600160a01b031663bd02d0f5611f968686866122e4565b6040518263ffffffff1660e01b8152600401611fb491815260200190565b602060405180830381865afa158015611fd1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d5919061514e565b600080821215611d965760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401611d8d565b600060405160200161207f906020808252601290820152711050d0d3d5539517d3d491115497d31254d560721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b600060405160200161207f906020808252601590820152741050d0d3d5539517d413d4d2551253d397d31254d5605a1b604082015260600190565b6000808361211657856060015161211c565b85604001515b9050600061212b888884612373565b905060008415612159578561214857866040015160200151612152565b8660200151602001515b9050612173565b8561216957604087015151612170565b6020870151515b90505b610ec58183615581565b60008061219261218c85612411565b84612422565b9050600084136121b3576121a581611d27565b6121ae906156d0565b6121bc565b6121bc81611d27565b949350505050565b6000816121d084611d27565b6109349190615678565b6000816001600160a01b0316836001600160a01b0316146121fc5760016121ff565b60025b60ff169392505050565b600081866001600160a01b031663bd02d0f5612226888888612430565b6040518263ffffffff1660e01b815260040161224491815260200190565b602060405180830381865afa158015612261573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612285919061514e565b6109d29190615702565b600081866001600160a01b031663bd02d0f56122268888886124a8565b600060405160200161207f906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b6000604051602001612318906020808252600e908201526d26a0ac2fa827262fa320a1aa27a960911b604082015260600190565b60408051601f1981840301815282825280516020918201209083015281018590526001600160a01b0384166060820152821515608082015260a0015b6040516020818303038152906040528051906020012090509392505050565b600080612388846040015185606001516121da565b905080856001600160a01b031663bd02d0f56123a88760000151876124e5565b6040518263ffffffff1660e01b81526004016123c691815260200190565b602060405180830381865afa1580156123e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612407919061514e565b6109d59190615702565b600080821215611d96575060000390565b600061093483836000612553565b6000604051602001612463906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a001612354565b6000604051602001612463906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b6000604051602001612516906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038086169183019190915283166060820152608001611e83565b600083600003612565575060006112bf565b811561258457611dfb8468327cb2734119d3b7a9601e1b85600161259b565b6112bc8468327cb2734119d3b7a9601e1b856125ec565b6000806125a98686866125ec565b905060018360028111156125bf576125bf613761565b1480156125dc5750600084806125d7576125d76156ec565b868809115b156109d5576109d26001826156a0565b60008080600019858709858702925082811083820303915050806000036126265783828161261c5761261c6156ec565b04925050506112bf565b80841161266d5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401611d8d565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6040518060c001604052806126e961271e565b81526020016126f6612a4e565b81526020016127036128dc565b81526020016000815260200160008152602001600081525090565b6040805160c081019091526000606082018181526080830182905260a0830191909152819081526020016127a560405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b905290565b604080516101808101909152600060608083018281526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120840192909252610140830181905261016083015281905b81526020016127a56040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604080516101608101909152600060608083018281526080840183905260a0840183905260c0840183905260e0840183905261010084018390526101208401929092526101408301528152602081016128b2612b94565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b60405180606001604052806000815260200160008152602001600081525090565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518060e001604052806129376128fd565b81526020016000815260200160008152602001612952612baf565b815260200161295f612bcf565b815260200161298860405180606001604052806000815260200160008152602001600081525090565b8152600060209091015290565b60408051610100810182526000918101828152606082018390526080820183905260a0820183905260c0820183905260e082019290925290819081526020016127bd6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b604080516101408101909152600060608083018281526080840183905260a0840183905260c0840183905260e084019290925261010083018190526101208301528190612816565b604080516102c0810190915260006101c082018181526101e08301829052610200830182905261022083018290526102408301829052610260830182905261028083018290526102a083019190915281908152602001612add6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001612b0d6040518060800160405280600081526020016000815260200160008152602001600081525090565b81526040805160608101825260008082526020828101829052928201529101908152602001612b4f604051806040016040528060008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610160810190915280600081526020016000612b4f565b6040518060400160405280612bc2612bf5565b81526020016127bd612bf5565b6040518060a001604052806000151581526020016000815260200160008152602001612bc25b604080516080810182526000918101828152606082019290925290819081526020016127bd604051806040016040528060008152602001600081525090565b6001600160a01b0381168114612c4957600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612c8457612c84612c4c565b60405290565b604080519081016001600160401b0381118282101715612c8457612c84612c4c565b604051606081016001600160401b0381118282101715612c8457612c84612c4c565b60405161016081016001600160401b0381118282101715612c8457612c84612c4c565b60405161010081016001600160401b0381118282101715612c8457612c84612c4c565b60405160c081016001600160401b0381118282101715612c8457612c84612c4c565b6040516101c081016001600160401b0381118282101715612c8457612c84612c4c565b60405160e081016001600160401b0381118282101715612c8457612c84612c4c565b60405161012081016001600160401b0381118282101715612c8457612c84612c4c565b60405160a081016001600160401b0381118282101715612c8457612c84612c4c565b604051601f8201601f191681016001600160401b0381118282101715612de857612de8612c4c565b604052919050565b8035612dfb81612c34565b919050565b600060808284031215612e1257600080fd5b612e1a612c62565b90508135612e2781612c34565b81526020820135612e3781612c34565b60208201526040820135612e4a81612c34565b60408201526060820135612e5d81612c34565b606082015292915050565b600060408284031215612e7a57600080fd5b612e82612c8a565b9050813581526020820135602082015292915050565b600060c08284031215612eaa57600080fd5b612eb2612cac565b9050612ebe8383612e68565b8152612ecd8360408401612e68565b6020820152612edf8360808401612e68565b604082015292915050565b8015158114612c4957600080fd5b6000806000806000806101c08789031215612f1257600080fd5b8635612f1d81612c34565b95506020870135612f2d81612c34565b945060408701359350612f438860608901612e00565b9250612f528860e08901612e98565b91506101a0870135612f6381612eea565b809150509295509295509295565b60005b83811015612f8c578181015183820152602001612f74565b50506000910152565b831515815260a06020820152600083518060a0840152612fbc8160c0850160208801612f71565b60c0601f19601f830116840101915050825160408301526020830151606083015260408301516080830152949350505050565b6000806000806000806000610180888a03121561300b57600080fd5b873561301681612c34565b9650602088013561302681612c34565b95506040880135945061303c8960608a01612e98565b9350610120880135925061014088013561305581612c34565b915061016088013561306681612eea565b8091505092959891949750929550565b6001600160a01b03169052565b805160018060a01b03808251168452806020830151166020850152806040830151166040850152505060208101518051606084015260208101516080840152604081015160a0840152606081015160c0840152608081015160e084015260a0810151610100818186015260c08301519150610120828187015260e0840151925061014083818801528285015161016088015281850151610180880152808501516101a0880152505050505060408101515115156101c08301525050565b80518252602090810151910152565b8051825260208082015190830152604090810151910152565b613173828251613083565b602081810151805180516101e0860152808301516001600160a01b0390811661020087015260408083015182166102208801526060808401516102408901526080808501516102608a015260a0808601516102808b015260c08601516102a08b015260e0909501516102c08a01528587015180516102e08b0152808801516103008b0152808401516103208b0152808301516103408b0152808201516103608b0152909401516103808901528185015180516103a08a0152808701516103c08a0152808301516103e08a0152810151610400890152840151805190921661042088015293810151610440870152909201516104608501529081015161327c610480850182613140565b5060a08101516104c084015260c08101516104e084015260e08101516105008401526101008101516105208401526101208101516105408401526101408101516105608401526101608101516105808401526101808101516105a08401526101a001516105c083015260408101516132f86105e084018261314f565b506060810151610640830152608081015161066083015260a0015161068090910152565b6106a081016109378284613168565b60008060008060008060006101a0888a03121561334757600080fd5b873561335281612c34565b96506133618960208a01612e00565b95506133708960a08a01612e68565b945061337f8960e08a01612e68565b935061338f896101208a01612e68565b9250610160880135915061018088013561306681612eea565b600080604083850312156133bb57600080fd5b82356133c681612c34565b946020939093013593505050565b6101e081016109378284613083565b600081518084526020808501945080840160005b8381101561341c5781516001600160a01b0316875295820195908201906001016133f7565b509495945050505050565b602081526000825161012080602085015261344761014085018351613076565b602082015161345a610160860182613076565b50604082015161346e610180860182613076565b5060608201516134826101a0860182613076565b5060808201516134966101c0860182613076565b5060a08201516134aa6101e0860182613076565b5060c08201516134be610200860182613076565b5060e0820151816102208601526134d96102608601826133e3565b9050610100830151925061013f19858203016102408601526134fb81846133e3565b925050602085015161354f6040860182805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b50604085015180511515858301525090949350505050565b6000806000806000610120868803121561358057600080fd5b853561358b81612c34565b945061359a8760208801612e00565b93506135a98760a08801612e68565b925060e08601356135b981612eea565b91506101008601356135ca81612eea565b809150509295509295909350565b60038110612c4957600080fd5b6000806000806000806101c087890312156135ff57600080fd5b863561360a81612c34565b95506136198860208901612e00565b94506136288860a08901612e98565b9350610160870135925061018087013561364181612c34565b91506101a0870135612f63816135d8565b600080600080610120858703121561366957600080fd5b843561367481612c34565b9350602085013561368481612c34565b9250604085013561369481612eea565b91506136a38660608701612e98565b905092959194509250565b6000806000806000806101c087890312156136c857600080fd5b86356136d381612c34565b95506136e28860208901612e00565b94506136f18860a08901612e98565b935061016087013561370281612c34565b925061018087013591506101a0870135612f6381612c34565b6000806000806080858703121561373157600080fd5b843561373c81612c34565b9350602085013561374c81612c34565b93969395505050506040820135916060013590565b634e487b7160e01b600052602160045260246000fd5b6008811061378757613787613761565b9052565b60038110612c4957612c49613761565b6137878161378b565b6137af828251613777565b60208101516137c1602084018261379b565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152505050565b805161020080845281516001600160a01b03908116918501919091526020820151166102208401526040810151600091613864610240860183613076565b60608101519150613879610260860183613076565b6080810151915061388e610280860183613076565b60a081015191506138a36102a0860183613076565b60c081015191506138b86102c0860183613076565b60e001516101006102e086015290506138d56103008501826133e3565b905060208301516138e960208601826137a4565b5060408381015180511515610180870152602081015115156101a08701529081015115156101c0860152606081015115156101e0860152509392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561397d57603f1988860301845261396b858351613826565b9450928501929085019060010161394f565b5092979650505050505050565b6020815260006109346020830184613826565b6000806000806000806000610100888a0312156139b957600080fd5b87356139c481612c34565b965060208801356139d481612c34565b95506139e38960408a01612e68565b94506080880135935060a0880135925060c0880135915060e088013561306681612eea565b60608101610937828461314f565b6000806000806000806000610120888a031215613a3257600080fd5b8735613a3d81612c34565b96506020880135613a4d81612c34565b95506040880135613a5d81612c34565b94506060880135613a6d81612c34565b935060808801359250613a838960a08a01612e68565b9150613a928960e08a01612e68565b905092959891949750929550565b9283526020830191909152604082015260600190565b600080600080600080600080610200898b031215613ad357600080fd5b8835613ade81612c34565b9750613aed8a60208b01612e00565b9650613afc8a60a08b01612e98565b9550610160890135945061018089013593506101a0890135613b1d81612c34565b92506101c0890135613b2e816135d8565b91506101e0890135613b3f81612eea565b809150509295985092959890939650565b60008060408385031215613b6357600080fd5b8235613b6e81612c34565b91506020830135613b7e81612c34565b809150509250929050565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b608081016109378284613b89565b6020808252825182820181905260009190848201906040850190845b81811015613c0d57613bf9838551613083565b928401926101e09290920191600101613be6565b50909695505050505050565b60008060006101008486031215613c2f57600080fd5b8335613c3a81612c34565b9250613c498560208601612e98565b915060e0840135613c5981612c34565b809150509250925092565b613c6f828251613140565b6020810151611f756040840182613140565b613c8c828251613b89565b60208101516080830152604081015160a08301526060810151613cb360c084018251613c64565b60200151613cc5610140840182613c64565b506080810151805115156101c084015260208101516101e084015260408101516102008401526060810151613cfe610220850182613c64565b5060800151613d116102a0840182613c64565b5060a0810151613d2561032084018261314f565b5060c0015115156103809190910152565b6103a081016109378284613c81565b60008060008060006101408688031215613d5e57600080fd5b8535613d6981612c34565b94506020860135613d7981612c34565b9350613d888760408801612e98565b9250610100860135613d9981612eea565b91506101208601356135ca81612eea565b60008060008060006101a08688031215613dc357600080fd5b8535613dce81612c34565b9450613ddd8760208801612e00565b9350613dec8760a08801612e98565b949793965093946101608101359450610180013592915050565b60006001600160401b03821115613e1f57613e1f612c4c565b5060051b60200190565b600082601f830112613e3a57600080fd5b81356020613e4f613e4a83613e06565b612dc0565b82815260c09283028501820192828201919087851115613e6e57600080fd5b8387015b85811015613e9157613e848982612e98565b8452928401928101613e72565b5090979650505050505050565b60008060008060808587031215613eb457600080fd5b8435613ebf81612c34565b935060208501356001600160401b03811115613eda57600080fd5b613ee687828801613e29565b949794965050505060408301359260600135919050565b6020808252825182820181905260009190848201906040850190845b81811015613c0d57613f2c838551613c81565b928401926103a09290920191600101613f19565b600080600060608486031215613f5557600080fd5b8335613f6081612c34565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b81811015613c0d57613fa4838551613b89565b9284019260809290920191600101613f91565b602081526000825161012080602085015260018060a01b038083511661014086015280602084015116610160860152806040840151166101808601525060608201516140076101a0860182613076565b50608082015161401b6101c0860182613076565b5060a082015160e06101e08601526140376102208601826133e3565b905060c0830151925061013f19858203016102008601526134fb81846133e3565b600080600080600060a0868803121561407057600080fd5b853561407b81612c34565b945060208681013561408c81612c34565b945060408701356001600160401b03808211156140a857600080fd5b818901915089601f8301126140bc57600080fd5b81356140ca613e4a82613e06565b81815260059190911b8301840190848101908c8311156140e957600080fd5b938501935b82851015614107578435825293850193908501906140ee565b97505050606089013592508083111561411f57600080fd5b505061412d88828901613e29565b92505061413c60808701612df0565b90509295509295909350565b6020808252825182820181905260009190848201906040850190845b81811015613c0d57614177838551613168565b928401926106a09290920191600101614164565b60008060008061010085870312156141a257600080fd5b84356141ad81612c34565b93506141bc8660208701612e00565b92506141cb8660a08701612e68565b915060e08501356141db81612eea565b939692955090935050565b6001600160a01b03929092168252602082015260400190565b8051612dfb81612c34565b8051612dfb81612eea565b60006020828403121561422757600080fd5b604051602081016001600160401b038111828210171561424957614249612c4c565b8060405250809150825161425c81612eea565b905292915050565b60008183036101e081121561427857600080fd5b614280612cac565b9150606081121561429057600080fd5b614298612cac565b83516142a381612c34565b815260208401516142b381612c34565b602082015260408401516142c681612c34565b60408201528252610160605f1982018113156142e157600080fd5b6142e9612cce565b9150606084015182526080840151602083015260a0840151604083015260c0840151606083015260e084015160808301526101008085015160a08401526101208086015160c08501526101408087015160e08601528387015183860152610180870151828601526101a0870151818601525050505080602083015250612edf836101c08401614215565b60006101e0828403121561438657600080fd5b6109348383614264565b61439b828251613140565b60208101516143ad6040840182613140565b506040810151611f756080840182613140565b6001600160a01b0387811682528616602082015261038081016143e66040830187613083565b6143f4610220830186613b89565b6144026102a0830185614390565b821515610360830152979650505050505050565b60006060828403121561442857600080fd5b614430612cac565b905081518152602082015160208201526040820151604082015292915050565b600080600060a0848603121561446557600080fd5b835161447081612eea565b60208501519093506001600160401b038082111561448d57600080fd5b818601915086601f8301126144a157600080fd5b8151818111156144b3576144b3612c4c565b6144c6601f8201601f1916602001612dc0565b91508082528760208285010111156144dd57600080fd5b6144ee816020840160208601612f71565b50925061450090508560408601614416565b90509250925092565b6001600160a01b0388811682528781166020830152604082018790526101808201906145386060840188614390565b856101208401528085166101408401525082151561016083015298975050505050505050565b6000610100828403121561457157600080fd5b614579612cf1565b905081518152602082015161458d81612c34565b602082015260408201516145a081612c34565b80604083015250606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015292915050565b600060c082840312156145f157600080fd5b6145f9612d14565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60006080828403121561464957600080fd5b614651612c62565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60006060828403121561468d57600080fd5b614695612cac565b905081516146a281612c34565b80825250602082015160208201526040820151604082015292915050565b6000604082840312156146d257600080fd5b6146da612c8a565b9050815181526020820151602082015292915050565b60008183036106a081121561470457600080fd5b61470c612d14565b6147168585614264565b81526104006101df198301121561472c57600080fd5b614734612d36565b9150614744856101e0860161455e565b8252614754856102e086016145df565b6020830152614767856103a08601614637565b604083015261477a85610420860161467b565b606083015261478d8561048086016146c0565b60808301526104c084015160a08301526104e084015160c083015261050084015160e08301526105208401516101008301526105408401516101208301526105608401516101408301526105808401516101608301526105a08401516101808301526105c08401516101a083015281602082015261480f856105e08601614416565b6040820152610640840151606082015261066084015160808201526106809093015160a0840152509092915050565b6001600160a01b03881681526101a0810161485c6020830189613b89565b61486960a0830188613140565b61487660e0830187613140565b614884610120830186613140565b8361016083015282151561018083015298975050505050505050565b6000808284036101808112156148b557600080fd5b8351925061016080601f19830112156148cd57600080fd5b6148d5612cce565b91506020850151825260408501516020830152606085015160408301526080850151606083015260a0850151608083015260c085015160a083015260e085015160c08301526101008086015160e08401526101208087015182850152610140915081870151818501525081860151818401525050809150509250929050565b600082601f83011261496557600080fd5b81516020614975613e4a83613e06565b82815260059290921b8401810191818101908684111561499457600080fd5b8286015b84811015610d285780516149ab81612c34565b8352918301918301614998565b600060e082840312156149ca57600080fd5b6149d2612d59565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015292915050565b600060208284031215614a2c57600080fd5b81516001600160401b0380821115614a4357600080fd5b8184019150610120808387031215614a5a57600080fd5b614a62612cac565b835183811115614a7157600080fd5b8401808803831315614a8257600080fd5b614a8a612d7b565b9250614a95816141ff565b8352614aa3602082016141ff565b6020840152614ab4604082016141ff565b6040840152614ac5606082016141ff565b6060840152614ad6608082016141ff565b6080840152614ae760a082016141ff565b60a0840152614af860c082016141ff565b60c084015260e081015184811115614b0f57600080fd5b614b1b89828401614954565b60e0850152506101008082015185811115614b3557600080fd5b614b418a828501614954565b8286015250838352614b5689602088016149b8565b6020840152614b6789828801614215565b60408401525090979650505050505050565b6001600160a01b0387811682526101c0820190614b996020840189613b89565b614ba660a0840188614390565b61016083018690528416610180830152614bbf8361378b565b826101a0830152979650505050505050565b60008060408385031215614be457600080fd5b505080516020909101519092909150565b6001600160a01b0387811682526101c0820190614c156020840189613b89565b614c2260a0840188614390565b808616610160840152846101808401528084166101a084015250979650505050505050565b6000806000838503610100811215614c5e57600080fd5b845193506020850151925060c0603f1982011215614c7b57600080fd5b50614c84612d14565b60408501518152606085015160208201526080850151604082015260a0850151614cad81612c34565b606082015260c0850151608082015260e09094015160a0850152509093909250565b634e487b7160e01b600052603260045260246000fd5b805160088110612dfb57600080fd5b8051612dfb816135d8565b60006101608284031215614d1257600080fd5b614d1a612cce565b9050614d2582614ce5565b8152614d3360208301614cf4565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525092915050565b600060808284031215614db057600080fd5b614db8612c62565b90508151614dc581612eea565b81526020820151614dd581612eea565b60208201526040820151614de881612eea565b60408201526060820151612e5d81612eea565b600060208284031215614e0d57600080fd5b81516001600160401b0380821115614e2457600080fd5b908301906102008286031215614e3957600080fd5b614e41612cac565b825182811115614e5057600080fd5b83016101008188031215614e6357600080fd5b614e6b612cf1565b614e74826141ff565b8152614e82602083016141ff565b6020820152614e93604083016141ff565b6040820152614ea4606083016141ff565b6060820152614eb5608083016141ff565b6080820152614ec660a083016141ff565b60a0820152614ed760c083016141ff565b60c082015260e082015184811115614eee57600080fd5b614efa89828501614954565b60e083015250825250614f108660208501614cff565b6020820152614f23866101808501614d9e565b604082015295945050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201614f5957614f59614f31565b5060010190565b6001600160a01b0392831681529116602082015260400190565b600060808284031215614f8c57600080fd5b614f94612c62565b90508151614fa181612c34565b81526020820151614fb181612c34565b60208201526040820151614fc481612c34565b60408201526060820151612e5d81612c34565b600060808284031215614fe957600080fd5b6109348383614f7a565b6001600160a01b038816815261016081016150116020830189613b89565b61501e60a0830188613140565b8560e0830152846101008301528361012083015282151561014083015298975050505050505050565b60006060828403121561505957600080fd5b6109348383614416565b6001600160a01b038881168252610180820190615083602084018a613b89565b87811660a0840152861660c083015260e082018590526150a7610100830185613140565b6107b1610140830184613140565b6000806000606084860312156150ca57600080fd5b8351925060208401519150604084015190509250925092565b6001600160a01b038981168252610200820190615103602084018b613b89565b61511060a084018a614390565b87610160840152866101808401528086166101a0840152506151318461378b565b836101c08301528215156101e08301529998505050505050505050565b60006020828403121561516057600080fd5b5051919050565b6001600160a01b0384811682526101008201906151876020840186614390565b80841660e084015250949350505050565b6000608082840312156151aa57600080fd5b6151b2612c8a565b90506151be83836146c0565b81526151cd83604084016146c0565b602082015292915050565b600061016082840312156151eb57600080fd5b6151f3612d9e565b9050815161520081612eea565b8082525060208201516020820152604082015160408201526152258360608401615198565b60608201526152378360e08401615198565b608082015292915050565b60008183036103a081121561525657600080fd5b61525e612d59565b6152688585614f7a565b81526080840151602082015260a0840151604082015261010060bf198301121561529157600080fd5b615299612c8a565b91506152a88560c08601615198565b82526152b8856101408601615198565b60208301528160608201526152d1856101c086016151d8565b60808201526152e4856103208601614416565b60a08201526152f6610380850161420a565b60c0820152949350505050565b600060a0828403121561531557600080fd5b61531d612d9e565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b600081830361016081121561536557600080fd5b61536d612c8a565b60c082121561537b57600080fd5b615383612d14565b9150835161539081612c34565b825260208401516153a081612c34565b602083015260408401516153b381612c34565b604083015260608401516153c681612c34565b606083015260808401516153d981612c34565b608083015260a08401516153ec81612c34565b60a08301528181526154018560c08601615303565b6020820152949350505050565b6001600160a01b0386168152610360810161542c6020830187613b89565b61543960a0830186614390565b615447610160830185613083565b826103408301529695505050505050565b60006020828403121561546a57600080fd5b81516001600160401b038082111561548157600080fd5b90830190610120828603121561549657600080fd5b61549e612cac565b8251828111156154ad57600080fd5b830160e081880312156154bf57600080fd5b6154c7612d59565b6154d0826141ff565b81526154de602083016141ff565b60208201526154ef604083016141ff565b6040820152615500606083016141ff565b6060820152615511608083016141ff565b608082015260a08201518481111561552857600080fd5b61553489828501614954565b60a08301525060c08201518481111561554c57600080fd5b61555889828501614954565b60c08301525082525061556e86602085016149b8565b6020820152614f23866101008501614215565b808202811582820484141761093757610937614f31565b81810360008312801583831316838312821617156155b8576155b8614f31565b5092915050565b600060208083850312156155d257600080fd5b82516001600160401b038111156155e857600080fd5b8301601f810185136155f957600080fd5b8051615607613e4a82613e06565b81815260059190911b8201830190838101908783111561562657600080fd5b928401925b828410156113525783518252928401929084019061562b565b60006020828403121561565657600080fd5b81516001600160401b0381111561566c57600080fd5b6121bc84828501614954565b808201828112600083128015821682158216171561569857615698614f31565b505092915050565b8082018082111561093757610937614f31565b6000602082840312156156c557600080fd5b815161093481612eea565b6000600160ff1b82016156e5576156e5614f31565b5060000390565b634e487b7160e01b600052601260045260246000fd5b60008261571f57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212205f478474bbaae0ba9631191302349da336b5d6aea29e87de3aa5027b5a12ea4e64736f6c63430008120033";

type ReaderConstructorParams =
  | [linkLibraryAddresses: ReaderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Reader__factory extends ContractFactory {
  constructor(...args: ReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Reader__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: ReaderLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d31b232fb363902662fbc281b11ab3357\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/PositionStoreUtils.sol:PositionStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$91a1a7f12f728c8759f4be979bae55555f\\$__", "g"),
      linkLibraryAddresses["contracts/position/PositionUtils.sol:PositionUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7d62b333171909e88f9935bee8a07b01ad\\$__", "g"),
      linkLibraryAddresses["contracts/reader/ReaderUtils.sol:ReaderUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e53db83827f4e07ebc418caf7145b8c2d5\\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b63e253a228f0e32f671cc49c7fc32477c\\$__", "g"),
      linkLibraryAddresses[
        "contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cede619ada704cb31824310f43bfb6e2d5\\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderWithdrawalUtils.sol:ReaderWithdrawalUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ae023ddda47a46a9af6ec057a2ebe54454\\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderPricingUtils.sol:ReaderPricingUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$12e61648fa0188a8261c5e0807220aaa66\\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderDepositUtils.sol:ReaderDepositUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$17bbc74b36df540d4a9b171eb59c5012db\\$__", "g"),
      linkLibraryAddresses[
        "contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3dc24d71d6ebafc0c4ce8ac2f69cd1548a\\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Reader> {
    return super.deploy(overrides || {}) as Promise<Reader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Reader {
    return super.attach(address) as Reader;
  }
  override connect(signer: Signer): Reader__factory {
    return super.connect(signer) as Reader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReaderInterface {
    return new utils.Interface(_abi) as ReaderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reader {
    return new Contract(address, _abi, signerOrProvider) as Reader;
  }
}

export interface ReaderLibraryAddresses {
  ["contracts/position/PositionStoreUtils.sol:PositionStoreUtils"]: string;
  ["contracts/position/PositionUtils.sol:PositionUtils"]: string;
  ["contracts/reader/ReaderUtils.sol:ReaderUtils"]: string;
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"]: string;
  ["contracts/reader/ReaderWithdrawalUtils.sol:ReaderWithdrawalUtils"]: string;
  ["contracts/reader/ReaderPricingUtils.sol:ReaderPricingUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/reader/ReaderDepositUtils.sol:ReaderDepositUtils"]: string;
  ["contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"]: string;
  ["contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"]: string;
}
