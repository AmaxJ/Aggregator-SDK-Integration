/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WithdrawalStoreUtilsTest,
  WithdrawalStoreUtilsTestInterface,
} from "../../../contracts/test/WithdrawalStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtBlock",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "setWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107ea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638b4541fd14610046578063ab4f9d7f1461005b578063fb909db31461006e575b600080fd5b6100596100543660046103da565b61008c565b005b61005961006936600461052f565b6100fc565b61007661014b565b6040516100839190610606565b60405180910390f35b604051631a9d46f160e21b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__90636a751bc4906100c7908690869086906004016106d4565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__906374b6fe13906064016100c7565b610153610160565b61015b610160565b919050565b604080516101408101909152600060608083018281526080840183905260a0840183905260c0840183905260e08401929092526101008301819052610120830152819081526020016101e86040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b6001600160a01b038116811461021557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561025057610250610218565b60405290565b604051606081016001600160401b038111828210171561025057610250610218565b803561015b81610200565b600082601f83011261029457600080fd5b813560206001600160401b03808311156102b0576102b0610218565b8260051b604051601f19603f830116810181811084821117156102d5576102d5610218565b6040529384528581018301938381019250878511156102f357600080fd5b83870191505b8482101561031b57813561030c81610200565b835291830191908301906102f9565b979650505050505050565b600060e0828403121561033857600080fd5b61034061022e565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015292915050565b60006020828403121561039a57600080fd5b604051602081016001600160401b03811182821017156103bc576103bc610218565b604052905080823580151581146103d257600080fd5b905292915050565b6000806000606084860312156103ef57600080fd5b83356103fa81610200565b92506020840135915060408401356001600160401b038082111561041d57600080fd5b90850190610120828803121561043257600080fd5b61043a610256565b82358281111561044957600080fd5b830160e0818a03121561045b57600080fd5b61046361022e565b61046c82610278565b815261047a60208301610278565b602082015261048b60408301610278565b604082015261049c60608301610278565b60608201526104ad60808301610278565b608082015260a0820135848111156104c457600080fd5b6104d08b828501610283565b60a08301525060c0820135848111156104e857600080fd5b6104f48b828501610283565b60c08301525082525061050a8860208501610326565b602082015261051d886101008501610388565b60408201528093505050509250925092565b60008060006060848603121561054457600080fd5b833561054f81610200565b925060208401359150604084013561056681610200565b809150509250925092565b6001600160a01b03169052565b600081518084526020808501945080840160005b838110156105b75781516001600160a01b031687529582019590820190600101610592565b509495945050505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b602081526000825161012080602085015260018060a01b038083511661014086015280602084015116610160860152806040840151166101808601525060608201516106566101a0860182610571565b50608082015161066a6101c0860182610571565b5060a082015160e06101e086015261068661022086018261057e565b905060c0830151925061013f19858203016102008601526106a7818461057e565b92505060208501516106bc60408601826105c2565b50604085015180511515858301525090949350505050565b600060018060a01b038086168352846020840152606060408401528351610120606085015281815116610180850152816020820151166101a0850152816040820151166101c0850152606081015191506107326101e0850183610571565b60808101519150610747610200850183610571565b60a0810151915060e061022085015261076461026085018361057e565b915060c0810151905061017f1984830301610240850152610785828261057e565b915050602084015161079a60808501826105c2565b50604084015180511515610160850152509594505050505056fea2646970667358221220903659bbd094fde7140749d58e7179ff54006701677cf5bcdce0a083ef7089c264736f6c63430008120033";

type WithdrawalStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WithdrawalStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: WithdrawalStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WithdrawalStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3dc24d71d6ebafc0c4ce8ac2f69cd1548a\\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<WithdrawalStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawalStoreUtilsTest {
    return super.attach(address) as WithdrawalStoreUtilsTest;
  }
  override connect(signer: Signer): WithdrawalStoreUtilsTest__factory {
    return super.connect(signer) as WithdrawalStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalStoreUtilsTestInterface {
    return new utils.Interface(_abi) as WithdrawalStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WithdrawalStoreUtilsTest;
  }
}

export interface WithdrawalStoreUtilsTestLibraryAddresses {
  ["contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"]: string;
}
